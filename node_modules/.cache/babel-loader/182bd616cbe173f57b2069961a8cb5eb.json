{"ast":null,"code":"var _jsxFileName = \"/Users/sher/Desktop/newShaurma/shaurmarket/src/Container/Auth/UpdateProfile.jsx\",\n    _s = $RefreshSig$();\n\nimport { Container } from \"@material-ui/core\";\nimport React, { useRef, useState } from \"react\";\nimport { Form, Button, Card, Alert } from \"react-bootstrap\";\nimport { Link, useHistory } from \"react-router-dom\";\nimport { useAuth } from \"../../Context/AuthContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function UpdateProfile() {\n  _s();\n\n  const emailRef = useRef();\n  const passwordRef = useRef();\n  const passwordConfirmRef = useRef();\n  const {\n    currentUser,\n    updatePassword,\n    updateEmail\n  } = useAuth();\n  const [error, setError] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const history = useHistory();\n\n  function handleSubmit(e) {\n    e.preventDefault();\n\n    if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n      return setError(\"Passwords do not match\");\n    }\n\n    const promises = [];\n    setLoading(true);\n    setError(\"\");\n\n    if (emailRef.current.value !== currentUser.email) {\n      promises.push(updateEmail(emailRef.current.value));\n    }\n\n    if (passwordRef.current.value) {\n      promises.push(updatePassword(passwordRef.current.value));\n    }\n\n    Promise.all(promises).then(() => {\n      history.push(\"/\");\n    }).catch(() => {\n      setError(\"Failed to update account\");\n    }).finally(() => {\n      setLoading(false);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"d-flex align-items-center justify-content-center\",\n        style: {\n          height: \"100vh\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-100\",\n          style: {\n            maxWidth: \"400px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-center mb-4\",\n                children: \"Update Profile\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 33\n              }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n                variant: \"danger\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  id: \"email\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"email\",\n                    ref: emailRef,\n                    required: true,\n                    defaultValue: currentUser.email\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 57,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  id: \"password\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Password\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    ref: passwordRef,\n                    placeholder: \"Leave blank to keep the same\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 66,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n                  id: \"password-confirm\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Password Confirmation\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"password\",\n                    ref: passwordConfirmRef,\n                    placeholder: \"Leave blank to keep the same\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  disabled: loading,\n                  className: \"w-100\",\n                  type: \"submit\",\n                  children: \"Update\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-100 text-center mt-2\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(UpdateProfile, \"yPXONjDcwLsR3jqAiTVxEd3HHiE=\", false, function () {\n  return [useAuth, useHistory];\n});\n\n_c = UpdateProfile;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateProfile\");","map":{"version":3,"sources":["/Users/sher/Desktop/newShaurma/shaurmarket/src/Container/Auth/UpdateProfile.jsx"],"names":["Container","React","useRef","useState","Form","Button","Card","Alert","Link","useHistory","useAuth","UpdateProfile","emailRef","passwordRef","passwordConfirmRef","currentUser","updatePassword","updateEmail","error","setError","loading","setLoading","history","handleSubmit","e","preventDefault","current","value","promises","email","push","Promise","all","then","catch","finally","height","maxWidth"],"mappings":";;;AAAA,SAASA,SAAT,QAA0B,mBAA1B;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,IAAT,EAAeC,MAAf,EAAuBC,IAAvB,EAA6BC,KAA7B,QAA0C,iBAA1C;AACA,SAASC,IAAT,EAAeC,UAAf,QAAiC,kBAAjC;AACA,SAASC,OAAT,QAAwB,2BAAxB;;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACpC,QAAMC,QAAQ,GAAGV,MAAM,EAAvB;AACA,QAAMW,WAAW,GAAGX,MAAM,EAA1B;AACA,QAAMY,kBAAkB,GAAGZ,MAAM,EAAjC;AACA,QAAM;AAAEa,IAAAA,WAAF;AAAeC,IAAAA,cAAf;AAA+BC,IAAAA;AAA/B,MAA+CP,OAAO,EAA5D;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACiB,OAAD,EAAUC,UAAV,IAAwBlB,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAMmB,OAAO,GAAGb,UAAU,EAA1B;;AAEA,WAASc,YAAT,CAAsBC,CAAtB,EAAyB;AACrBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAIZ,WAAW,CAACa,OAAZ,CAAoBC,KAApB,KAA8Bb,kBAAkB,CAACY,OAAnB,CAA2BC,KAA7D,EAAoE;AAChE,aAAOR,QAAQ,CAAC,wBAAD,CAAf;AACH;;AAED,UAAMS,QAAQ,GAAG,EAAjB;AACAP,IAAAA,UAAU,CAAC,IAAD,CAAV;AACAF,IAAAA,QAAQ,CAAC,EAAD,CAAR;;AAEA,QAAIP,QAAQ,CAACc,OAAT,CAAiBC,KAAjB,KAA2BZ,WAAW,CAACc,KAA3C,EAAkD;AAC9CD,MAAAA,QAAQ,CAACE,IAAT,CAAcb,WAAW,CAACL,QAAQ,CAACc,OAAT,CAAiBC,KAAlB,CAAzB;AACH;;AACD,QAAId,WAAW,CAACa,OAAZ,CAAoBC,KAAxB,EAA+B;AAC3BC,MAAAA,QAAQ,CAACE,IAAT,CAAcd,cAAc,CAACH,WAAW,CAACa,OAAZ,CAAoBC,KAArB,CAA5B;AACH;;AAEDI,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAZ,EACKK,IADL,CACU,MAAM;AACRX,MAAAA,OAAO,CAACQ,IAAR,CAAa,GAAb;AACH,KAHL,EAIKI,KAJL,CAIW,MAAM;AACTf,MAAAA,QAAQ,CAAC,0BAAD,CAAR;AACH,KANL,EAOKgB,OAPL,CAOa,MAAM;AACXd,MAAAA,UAAU,CAAC,KAAD,CAAV;AACH,KATL;AAUH;;AAED,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,6BACI,QAAC,SAAD;AAAW,QAAA,SAAS,EAAC,kDAArB;AACI,QAAA,KAAK,EAAE;AAAEe,UAAAA,MAAM,EAAE;AAAV,SADX;AAAA,+BAGI;AAAK,UAAA,SAAS,EAAC,OAAf;AAAuB,UAAA,KAAK,EAAE;AAAEC,YAAAA,QAAQ,EAAE;AAAZ,WAA9B;AAAA,kCACI,QAAC,IAAD;AAAA,mCACI,QAAC,IAAD,CAAM,IAAN;AAAA,sCACI;AAAI,gBAAA,SAAS,EAAC,kBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADJ,EAEKnB,KAAK,iBAAI,QAAC,KAAD;AAAO,gBAAA,OAAO,EAAC,QAAf;AAAA,0BAAyBA;AAAzB;AAAA;AAAA;AAAA;AAAA,sBAFd,eAGI,QAAC,IAAD;AAAM,gBAAA,QAAQ,EAAEK,YAAhB;AAAA,wCACI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAC,OAAf;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,oBAAA,IAAI,EAAC,OADT;AAEI,oBAAA,GAAG,EAAEX,QAFT;AAGI,oBAAA,QAAQ,MAHZ;AAII,oBAAA,YAAY,EAAEG,WAAW,CAACc;AAJ9B;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,eAUI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAC,UAAf;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,oBAAA,IAAI,EAAC,UADT;AAEI,oBAAA,GAAG,EAAEhB,WAFT;AAGI,oBAAA,WAAW,EAAC;AAHhB;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAVJ,eAkBI,QAAC,IAAD,CAAM,KAAN;AAAY,kBAAA,EAAE,EAAC,kBAAf;AAAA,0CACI,QAAC,IAAD,CAAM,KAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADJ,eAEI,QAAC,IAAD,CAAM,OAAN;AACI,oBAAA,IAAI,EAAC,UADT;AAEI,oBAAA,GAAG,EAAEC,kBAFT;AAGI,oBAAA,WAAW,EAAC;AAHhB;AAAA;AAAA;AAAA;AAAA,0BAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,wBAlBJ,eA0BI,QAAC,MAAD;AAAQ,kBAAA,QAAQ,EAAEM,OAAlB;AAA2B,kBAAA,SAAS,EAAC,OAArC;AAA6C,kBAAA,IAAI,EAAC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,sBAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBADJ,eAqCI;AAAK,YAAA,SAAS,EAAC,wBAAf;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,EAAE,EAAC,GAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,kBArCJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ,mBADJ;AAmDH;;GAzFuBT,a;UAIiCD,O,EAGrCD,U;;;KAPIE,a","sourcesContent":["import { Container } from \"@material-ui/core\"\nimport React, { useRef, useState } from \"react\"\nimport { Form, Button, Card, Alert } from \"react-bootstrap\"\nimport { Link, useHistory } from \"react-router-dom\"\nimport { useAuth } from \"../../Context/AuthContext\"\n\nexport default function UpdateProfile() {\n    const emailRef = useRef()\n    const passwordRef = useRef()\n    const passwordConfirmRef = useRef()\n    const { currentUser, updatePassword, updateEmail } = useAuth()\n    const [error, setError] = useState(\"\")\n    const [loading, setLoading] = useState(false)\n    const history = useHistory()\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        if (passwordRef.current.value !== passwordConfirmRef.current.value) {\n            return setError(\"Passwords do not match\")\n        }\n\n        const promises = []\n        setLoading(true)\n        setError(\"\")\n\n        if (emailRef.current.value !== currentUser.email) {\n            promises.push(updateEmail(emailRef.current.value))\n        }\n        if (passwordRef.current.value) {\n            promises.push(updatePassword(passwordRef.current.value))\n        }\n\n        Promise.all(promises)\n            .then(() => {\n                history.push(\"/\")\n            })\n            .catch(() => {\n                setError(\"Failed to update account\")\n            })\n            .finally(() => {\n                setLoading(false)\n            })\n    }\n\n    return (\n        <>\n            <div className=\"App\">\n                <Container className=\"d-flex align-items-center justify-content-center\"\n                    style={{ height: \"100vh\" }}\n                >\n                    <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n                        <Card>\n                            <Card.Body>\n                                <h2 className=\"text-center mb-4\">Update Profile</h2>\n                                {error && <Alert variant=\"danger\">{error}</Alert>}\n                                <Form onSubmit={handleSubmit}>\n                                    <Form.Group id=\"email\">\n                                        <Form.Label>Email</Form.Label>\n                                        <Form.Control\n                                            type=\"email\"\n                                            ref={emailRef}\n                                            required\n                                            defaultValue={currentUser.email}\n                                        />\n                                    </Form.Group>\n                                    <Form.Group id=\"password\">\n                                        <Form.Label>Password</Form.Label>\n                                        <Form.Control\n                                            type=\"password\"\n                                            ref={passwordRef}\n                                            placeholder=\"Leave blank to keep the same\"\n                                        />\n                                    </Form.Group>\n                                    <Form.Group id=\"password-confirm\">\n                                        <Form.Label>Password Confirmation</Form.Label>\n                                        <Form.Control\n                                            type=\"password\"\n                                            ref={passwordConfirmRef}\n                                            placeholder=\"Leave blank to keep the same\"\n                                        />\n                                    </Form.Group>\n                                    <Button disabled={loading} className=\"w-100\" type=\"submit\">\n                                        Update\n                                    </Button>\n                                </Form>\n                            </Card.Body>\n                        </Card>\n                        <div className=\"w-100 text-center mt-2\">\n                            <Link to=\"/\">Cancel</Link>\n                        </div>\n                    </div>\n                </Container>\n            </div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}