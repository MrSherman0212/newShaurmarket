{"ast":null,"code":"var _jsxFileName = \"/Users/sher/Desktop/newShaurma/shaurmarket/src/Container/Auth/ForgotPassword.jsx\",\n    _s = $RefreshSig$();\n\nimport { Container } from '@material-ui/core';\nimport React, { useRef, useState } from 'react';\nimport { Alert, Button, Card, Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useAuth } from '../../Context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst ForgotPassword = () => {\n  _s();\n\n  const emailRef = useRef();\n  const [error, setError] = useState('');\n  const {\n    resetPassword\n  } = useAuth();\n  const [message, setMessage] = useState('');\n  const [loading, setLoading] = useState(false);\n\n  async function handleSubmit(e) {\n    e.preventDefault();\n\n    try {\n      setMessage('');\n      setError('');\n      setLoading(true);\n      await resetPassword(emailRef.current.value);\n      setMessage('Check your inbox for further instructions');\n    } catch {\n      setError('Failed to reset password');\n    }\n\n    setLoading(false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        className: \"d-flex align-items-center justify-content-center\",\n        style: {\n          height: \"100vh\"\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"w-100\",\n          style: {\n            maxWidth: \"400px\"\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n                className: \"text-center mb-4\",\n                children: \"Password Reset\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 33\n              }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n                variant: \"dander\",\n                children: error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 43\n              }, this), /*#__PURE__*/_jsxDEV(Form, {\n                onSubmit: handleSubmit,\n                children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n                  id: \"email\",\n                  children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                    children: \"Email\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 42,\n                    columnNumber: 41\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                    type: \"email\",\n                    ref: emailRef,\n                    required: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 43,\n                    columnNumber: 41\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 37\n                }, this), /*#__PURE__*/_jsxDEV(Button, {\n                  disabled: loading,\n                  className: \"w-100 mt-3\",\n                  type: \"submit\",\n                  children: \"Reset Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 45,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"w-100 text-center mt-3\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/login\",\n                  children: \"Log In\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-100 text-center mt-2\",\n            children: [\"Need an account? \", /*#__PURE__*/_jsxDEV(Link, {\n              to: \"signup\",\n              children: \"Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 46\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n};\n\n_s(ForgotPassword, \"Y4oapqX5sThc2ZFiQGOVONbrDAw=\", false, function () {\n  return [useAuth];\n});\n\n_c = ForgotPassword;\nexport default ForgotPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForgotPassword\");","map":{"version":3,"sources":["/Users/sher/Desktop/newShaurma/shaurmarket/src/Container/Auth/ForgotPassword.jsx"],"names":["Container","React","useRef","useState","Alert","Button","Card","Form","Link","useAuth","ForgotPassword","emailRef","error","setError","resetPassword","message","setMessage","loading","setLoading","handleSubmit","e","preventDefault","current","value","height","maxWidth"],"mappings":"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","sourcesContent":["import { Container } from '@material-ui/core';\nimport React, { useRef, useState } from 'react';\nimport { Alert, Button, Card, Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useAuth } from '../../Context/AuthContext';\n\nconst ForgotPassword = () => {\n    const emailRef = useRef()\n    const [error, setError] = useState('')\n    const { resetPassword } = useAuth()\n    const [message, setMessage] = useState('')\n    const [loading, setLoading] = useState(false)\n\n    async function handleSubmit(e) {\n        e.preventDefault()\n\n        try {\n            setMessage('')\n            setError('')\n            setLoading(true)\n            await resetPassword(emailRef.current.value)\n            setMessage('Check your inbox for further instructions')\n        } catch {\n            setError('Failed to reset password')\n        }\n        setLoading(false)\n    }\n\n    return (\n        <>\n            <div className=\"App\">\n                <Container className=\"d-flex align-items-center justify-content-center\"\n                    style={{ height: \"100vh\" }}\n                >\n                    <div className=\"w-100\" style={{ maxWidth: \"400px\" }}>\n                        <Card>\n                            <Card.Body>\n                                <h2 className=\"text-center mb-4\">Password Reset</h2>\n                                {error && <Alert variant=\"dander\">{error}</Alert>}\n                                <Form onSubmit={handleSubmit}>\n                                    <Form.Group id=\"email\">\n                                        <Form.Label>Email</Form.Label>\n                                        <Form.Control type=\"email\" ref={emailRef} required />\n                                    </Form.Group>\n                                    <Button disabled={loading} className=\"w-100 mt-3\" type=\"submit\">Reset Password</Button>\n                                </Form>\n                                <div className=\"w-100 text-center mt-3\">\n                                    <Link to=\"/login\">Log In</Link>\n                                </div>\n                            </Card.Body>\n                        </Card>\n                        <div className=\"w-100 text-center mt-2\">\n                            Need an account? <Link to=\"signup\">Sign Up</Link>\n                        </div>\n                    </div>\n                </Container>\n            </div>\n        </>\n    );\n};\n\nexport default ForgotPassword;"]},"metadata":{},"sourceType":"module"}